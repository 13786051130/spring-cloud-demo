<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ztj.jwtdemo.dao.DictMapper">

    <resultMap type="com.ztj.jwtdemo.model.Dict" id="BaseResultMap">
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="pcode" jdbcType="VARCHAR" property="pcode"/>
        <result column="name_cn" jdbcType="VARCHAR" property="nameCn"/>
        <result column="name_en" jdbcType="VARCHAR" property="nameEn"/>
        <result column="tips" jdbcType="VARCHAR" property="tips"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>

    <sql id="Base_Column_List">
        code, pcode, name_cn, name_en, tips, order_num, status
    </sql>

    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from base_dict
    </select>

    <select id="selectByPcode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_dict
        where pcode = #{pcode}
        order by order_num
    </select>

    <select id="selectByPcodeExclude" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_dict
        where pcode = #{pcode} and code != #{code}
        order by order_num
    </select>

    <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_dict
        where code = #{code}
    </select>

    <select id="selectByCodeAndPcode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_dict
        where code = #{code} and pcode = #{pcode}
    </select>

    <insert id="insertSelective" parameterType="com.ztj.jwtdemo.model.Dict">
        insert into base_dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">
                code,
            </if>
            <if test="pcode != null">
                pcode,
            </if>
            <if test="nameCn != null">
                name_cn,
            </if>
            <if test="nameEn != null">
                name_en,
            </if>
            <if test="tips != null">
                tips,
            </if>
            <if test="orderNum != null">
                order_num,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="pcode != null">
                #{pcode,jdbcType=VARCHAR},
            </if>
            <if test="nameCn != null">
                #{nameCn,jdbcType=VARCHAR},
            </if>
            <if test="nameEn != null">
                #{nameEn,jdbcType=VARCHAR},
            </if>
            <if test="tips != null">
                #{tips,jdbcType=VARCHAR},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateSelective" parameterType="com.ztj.jwtdemo.model.Dict">
        update base_dict
        <set>
            <if test="nameCn != null">
                name_cn = #{nameCn,jdbcType=VARCHAR},
            </if>
            <if test="nameEn != null">
                name_en = #{nameEn,jdbcType=VARCHAR},
            </if>
            <if test="tips != null">
                tips = #{tips,jdbcType=VARCHAR},
            </if>
            <if test="orderNum != null">
                order_num = #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where code = #{code,jdbcType=VARCHAR} and pcode = #{pcode,jdbcType=VARCHAR}
    </update>

    <delete id="deleteByCodeAndPCode" parameterType="java.lang.String">
        delete from base_dict where code = #{code} and pcode = #{pcode}
    </delete>

</mapper>